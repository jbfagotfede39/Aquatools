% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chronique.agregation.R
\name{chronique.agregation}
\alias{chronique.agregation}
\title{Agrégation de chroniques}
\usage{
chronique.agregation(
  data = data,
  projet = NA_character_,
  instantanne = TRUE,
  quotidien = TRUE,
  mensuel = TRUE,
  annuel = TRUE,
  integral = TRUE,
  complement = FALSE,
  datedebutanneebiol = "10-01",
  export = FALSE
)
}
\arguments{
\item{data}{Data.frame contenant a minima une colonne chmes_date, une colonne chmes_heure et une colonne chmes_valeur}

\item{projet}{Nom du projet}

\item{instantanne}{Si \code{TRUE} (par défaut), sortie des données instantannées}

\item{quotidien}{Si \code{TRUE} (par défaut), agrégation journalière}

\item{mensuel}{Si \code{TRUE} (par défaut), agrégation mensuelle}

\item{annuel}{Si \code{TRUE} (par défaut), agrégation annuelle}

\item{integral}{Si \code{TRUE} (par défaut), agrégation sur l'intégralité de la chronique}

\item{complement}{Si \code{TRUE}, complément de la chronique avec les données manquantes (\code{FALSE} par défaut). Uniquement pour les valeurs journalières}

\item{datedebutanneebiol}{Date de démarrage de l'année biologique : 10-01 (par défaut - 1er octobre)}

\item{export}{Si \code{TRUE}, exporte les résultats (\code{FALSE} par défaut)}
}
\description{
Cette fonction permet d'agréger des chroniques de mesures (température, niveaux, etc.) à différentes fréquences (dans l'ordre : pas d'agrégation, jours, mois, années, chronique complète)
}
\examples{
DataTravail <- chronique.agregation(data)
DataTravail[[1]];DataTravail[[2]];DataTravail[[3]];DataTravail[[4]];DataTravail[[5]]
DataTravail \%>\% purrr::pluck(2)
chronique.agregation() \%>\% magrittr::extract2(2)
chronique.agregation(instantanne = F, mensuel = F, annuel = F, integral = F)
chronique.agregation(data, export = T) # Export sous forme de fichier excel avec 5 onglets
Mesures \%>\% group_split(chmes_coderhj) \%>\% purrr::map_dfr(~ chronique.agregation(., instantanne = F, mensuel = F, annuel = F, integral = F)) \%>\% 
Mesures \%>\% group_split(chmes_coderhj) \%>\% purrr::map_dfr(~ chronique.agregation(.) \%>\% purrr::pluck(2))
for(i in 1:length(mesures_agregees_completes)) { # Afin de regrouper les données journalières après un traitement intégral exporté et stocké
if(i == 1) mesures_agregees_journalieres <- mesures_agregees_completes[[c(1, 2)]]
 if(i != 1){
  mesures_agregees_journalieres <- 
    mesures_agregees_journalieres \%>\% 
    union(mesures_agregees_completes[[c(i, 2)]])
}
}
}
\keyword{chronique}
